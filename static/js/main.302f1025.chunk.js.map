{"version":3,"sources":["mic.js","stats.js","serviceWorker.js","index.js","shaders.js"],"names":["getMicMediaStream","a","constraints","audio","videol","navigator","mediaDevices","getUserMedia","console","log","webkitGetUserMedia","Promise","resolve","reject","reqId","makeStats","stats","Stats","showFpsCounter","enabled","document","body","appendChild","dom","style","right","left","requestAnimationFrame","loop","update","cancelAnimationFrame","undefined","removeChild","Boolean","window","location","hostname","match","micAnalyzer","mediaStream","AudioContext","webkitAudioContext","context","Meyda","createMeydaAnalyzer","audioContext","bufferSize","source","createMediaStreamSource","windowingFunction","featureExtractors","serviceWorker","ready","then","registration","unregister","catch","error","message","GlAttractor","fragmentShaderCode","vertexShaderCode","numPoints","this","canvas","createElement","setWidth","Math","min","innerHeight","innerWidth","setHeight","width","setMargin","height","margin","gl","getContext","antialias","depth","program","compileShaders","useProgram","useVertexBuffer","rootEl","getElementById","devicePixelRatio","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","array","Float32Array","map","random","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","a_position","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","b","c","d","color","u_a","getUniformLocation","u_b","u_c","u_d","u_color","uniform1f","drawArrays","POINTS","SoundMapper","energy","features","analyzer","ts","get","_energyBin","_oscillation","_getColor","_getD","flatness","sin","floor","onload","points","pow","attractor","mapper","timestamp","uniforms","getUniforms","setUniforms","draw","innerHTML"],"mappings":"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","file":"static/js/main.302f1025.chunk.js","sourcesContent":["export async function getMicMediaStream() {\n  const constraints = { audio: true, videol: false };\n  if (navigator.mediaDevices.getUserMedia) {\n    console.log(\"Using navigator.mediaDevices\");\n    return navigator.mediaDevices.getUserMedia(constraints);\n  } else if (navigator.webkitGetUserMedia || navigator.getUserMedia) {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  }\n}\n","import Stats from \"stats.js\";\n\nfunction makeStats() {\n  // poor man's run once\n  if (makeStats.stats) return makeStats.stats;\n  makeStats.stats = new Stats();\n  return makeStats.stats;\n}\n\nlet reqId;\nexport const showFpsCounter = enabled => {\n  const stats = makeStats();\n  if (enabled && !reqId) {\n    document.body.appendChild(stats.dom);\n    stats.dom.style.right = 0;\n    stats.dom.style.left = null;\n    reqId = requestAnimationFrame(function loop() {\n      stats.update();\n      reqId = requestAnimationFrame(loop);\n    });\n  } else if (!enabled && reqId) {\n    cancelAnimationFrame(reqId);\n    reqId = undefined;\n    document.body.removeChild(stats.dom);\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Meyda from 'meyda';\n\nimport { getMicMediaStream } from './mic';\nimport { showFpsCounter } from \"./stats\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { fragmentShaderCode, vertexShaderCode } from './shaders';\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nasync function micAnalyzer() {\n  const mediaStream = await getMicMediaStream();\n  const AudioContext = window.AudioContext // Default\n  || window.webkitAudioContext // Safari and old versions of Chrome\n  || false;\n  const context = new AudioContext();\n  return Meyda.createMeydaAnalyzer({\n    audioContext: context,\n    bufferSize: 512,\n    source: context.createMediaStreamSource(mediaStream),\n    windowingFunction: 'blackman',\n    // perceptualSharpness, zcr, rms\n    featureExtractors: [\"energy\", \"spectralFlatness\"],\n  });\n};\n\nclass GlAttractor {\n  constructor(fragmentShaderCode, vertexShaderCode, numPoints) {\n    this.canvas = document.createElement('canvas');\n    this.setWidth(Math.min(window.innerHeight, window.innerWidth));\n    this.setHeight(this.width);\n    this.setMargin((window.innerHeight - this.height) / 2)\n    this.canvas.style = `width: ${this.width}px; height: ${this.height}px; margin: ${this.margin};`;\n    this.gl = this.canvas.getContext(\"webgl\", {antialias: true, depth: false});\n    this.program = this.compileShaders(fragmentShaderCode, vertexShaderCode);\n    this.gl.useProgram(this.program);\n    this.numPoints = numPoints;\n    this.useVertexBuffer();\n\n    const rootEl = document.getElementById(\"root\");\n    rootEl.style = `width: ${this.width}px; height: ${this.height}px`;\n    rootEl.appendChild(this.canvas);\n  }\n\n  setWidth(width) {\n    this.width = width;\n    this.canvas.width = width * devicePixelRatio;\n    this.canvas.style = this.canvas.style + `width: ${width}px;`;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    this.canvas.height = height * devicePixelRatio;\n    this.canvas.style = this.canvas.style + `height: ${height}px;`;\n  }\n\n  setMargin(margin) {\n    this.margin = margin;\n    this.canvas.style = this.canvas.style + `margin: ${margin} auto;`;\n  }\n\n  compileShaders(fragmentShaderCode, vertexShaderCode) {\n    const gl = this.gl;\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderCode);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) throw gl.getShaderInfoLog(vertexShader);\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderCode);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) throw gl.getShaderInfoLog(fragmentShader);\n\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) throw gl.getProgramInfoLog(program);\n\n    return program;\n  }\n\n  useVertexBuffer() {\n    const gl = this.gl;\n    const array = new Float32Array(this.numPoints * 2).map(() => Math.random() * 2 - 1);\n    const vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    const a_position = gl.getAttribLocation(this.program, \"a_position\");\n    gl.vertexAttribPointer(a_position, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(a_position);\n  }\n\n  setUniforms(a, b, c, d, color) {\n    const u_a = this.gl.getUniformLocation(this.program, \"u_a\")\n    const u_b = this.gl.getUniformLocation(this.program, \"u_b\")\n    const u_c = this.gl.getUniformLocation(this.program, \"u_c\")\n    const u_d = this.gl.getUniformLocation(this.program, \"u_d\")\n    const u_color = this.gl.getUniformLocation(this.program, \"u_color\")\n    this.gl.uniform1f(u_a, a);\n    this.gl.uniform1f(u_b, b);\n    this.gl.uniform1f(u_c, c);\n    this.gl.uniform1f(u_d, d);\n    this.gl.uniform1f(u_color, color);\n  }\n\n  draw() {\n    const gl = this.gl;\n    gl.drawArrays(gl.POINTS, 0, this.numPoints);\n  }\n}\n\nclass SoundMapper {\n  constructor() {\n    this.energy = 0;\n    this.features = {};\n  }\n\n  getUniforms(analyzer, ts) {\n    if (analyzer) {\n      const features = analyzer.get([\"energy\", \"spectralFlatness\"]);\n      if (features) {\n        this.energy += features.energy;\n        this.features = features;\n      } else {\n        this.features = {};\n      }\n    }\n    switch (this._energyBin() % 10) {\n      case 1:\n      case 4:\n      case 7:\n        return [-2.0, this._oscillation(ts)-2.0, -1.2, 2.0, this._getColor(ts)]\n      case 2:\n      case 5:\n        return [-2.0, -2.53, this._oscillation(ts)-1.61, 2.0, this._getColor(ts)]\n      default:\n        return [this._oscillation(ts) - 2.0, -2.0, -1.2, this._getD(), this._getColor(ts)]\n    }\n  }\n\n  _getD() {\n    return (this.features.flatness < .05) ? 2.0 - this.features.energy : 2.0;\n  }\n\n  _getColor(ts) {\n    if (this.features.energy < .05) {\n      return .0;\n    } else if (this.features.energy < .2) {\n      return Math.min(.8, (Math.sin(ts / 8000) + 1) / 2);\n    } else {\n      return .8;\n    }\n  }\n\n  _energyBin() {\n    return Math.floor(this.energy / 100);\n  }\n\n  _oscillation(ts) {\n    return Math.sin(this.energy + ts / 10000);\n  }\n}\n\nwindow.onload = async function onLoad() {\n  showFpsCounter(true);\n  const points = devicePixelRatio > 1 ? Math.pow(2, 20) : Math.pow(2, 19);\n  const attractor = new GlAttractor(fragmentShaderCode, vertexShaderCode, points);\n  let analyzer;\n  let mapper = new SoundMapper();\n  requestAnimationFrame(function loop(timestamp) {\n    const uniforms = mapper.getUniforms(analyzer, timestamp);\n    attractor.setUniforms(...uniforms);\n    attractor.draw();\n    document.getElementById(\"meyda-debug\").innerHTML = `${Math.floor(mapper.energy)} ${Math.floor(mapper._energyBin())}`;\n    requestAnimationFrame(loop);\n  });\n\n  try {\n    analyzer = await micAnalyzer();\n  } catch (e) {\n    console.log(e);\n  }\n\n};\n","export const fragmentShaderCode = `\nprecision highp float;\n\nuniform float u_color;\n\nvarying float v_t;\n\nconst float PI = 3.14159265359;\n\nvec3 cubehelix(float x, float y, float z) {\n  float a = y * z * (1.0 - z);\n  float c = cos(x + PI / 2.0);\n  float s = sin(x + PI / 2.0);\n  return vec3(\n    z + a * (1.78277 * s - 0.14861 * c),\n    z - a * (0.29227 * c + 0.90649 * s),\n    z + a * (1.97294 * c)\n  );\n}\n\nvec3 rainbow(float t) {\n  if (t < 0.0 || t > 1.0) t -= floor(t);\n  float ts = abs(t - 0.5);\n  return cubehelix(\n    (360.0 * t - 100.0) / 180.0 * PI,\n    1.5 - 1.5 * ts,\n    u_color - 0.9 * ts\n  );\n}\n\nvoid main() {\n  gl_FragColor = vec4(rainbow(v_t / 4.0 + 0.25), 1.0);\n}\n`;\n\nexport const vertexShaderCode = `\nprecision highp float;\n\nconst float PI = 3.14159265359;\n\nuniform float u_a;\nuniform float u_b;\nuniform float u_c;\nuniform float u_d;\n\nattribute vec2 a_position;\n\nvarying float v_t;\n\nvoid main() {\nfloat x1, x2 = a_position.x;\nfloat y1, y2 = a_position.y;\nfor (int i = 0; i < 8; i++) {\n  x1 = x2, y1 = y2;\n  x2 = sin(u_a * y1) - cos(u_b * x1);\n  y2 = sin(u_c * x1) - cos(u_d * y1);\n}\nv_t = atan(a_position.y, a_position.x) / PI;\ngl_Position = vec4(x2 / 2.0, y2 / 2.0, 0.0, 1.0);\ngl_PointSize = 1.5;\n}\n`;\n"],"sourceRoot":""}